# Generated by Django 3.2.19 on 2023-06-25 01:04

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Required, PrimaryKey none-editable', primary_key=True, serialize=False, verbose_name='UUID Identifier')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this data is active or deleted', verbose_name='Active')),
                ('order_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Accessories'), (2, 'Tint'), (3, 'Coating'), (4, 'PPF'), (5, 'MVP'), (6, 'Essential'), (7, 'Deluxe'), (8, 'Ultimate'), (9, 'XCA1'), (10, 'XCA2'), (11, 'XCA3'), (12, 'XCA5'), (13, 'Basic Coating Maintenance'), (14, 'Performance Coating Maintenance'), (15, 'Ultra Coat Maintenance')], null=True, verbose_name='Order Type')),
                ('tint_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Ala-carte'), (2, 'Continue Last Order'), (3, 'Package')], null=True, verbose_name='Tint Type')),
                ('tint_package', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Titan'), (2, 'Bronze'), (3, 'Silver'), (4, 'Gold'), (5, 'Platinum'), (6, 'Royal'), (7, 'Royal Plus'), (8, 'Royal Plus Safety')], null=True, verbose_name='Tint Package')),
            ],
            options={
                'verbose_name': 'Order',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Required, PrimaryKey none-editable', primary_key=True, serialize=False, verbose_name='UUID Identifier')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this data is active or deleted', verbose_name='Active')),
                ('part_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Front Windscreen'), (2, 'Rear Windscreen'), (3, 'Left Window'), (4, 'Right Window'), (5, 'Gift')], null=True, verbose_name='Part')),
                ('claim_insurance_bool', models.BooleanField(blank=True, default=False, null=True, verbose_name='Claim Under Insurance')),
                ('job_type', models.CharField(blank=True, choices=[(1, 'Do It Now'), (2, 'Pending'), (3, 'Install'), (4, 'Remove Old Tint')], max_length=100, null=True, verbose_name='Job')),
                ('tint_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Carbon Film - BK-50 2MIL'), (2, 'Carbon Film - BK-70 2MIL'), (3, 'Carbon Film - BK-80 2MIL'), (4, 'Carbon Film - BK-90 2MIL'), (5, 'Jasper 2MIL'), (6, 'Titan Black 2MIL'), (7, 'Ceramic 2MIL'), (8, 'Ceramic Black 2MIL'), (9, 'Ceramic Black DK 2MIL'), (10, 'PRO Nano 2MIL'), (11, 'Nano Shield 2MIL'), (12, 'Nano Shield DK 2MIL'), (13, 'Black Rainbow(Super Clear) 3MIL'), (14, 'Black Rainbow 3MIL'), (15, 'Black Rainbow DK 3MIL'), (16, 'Black Rainbow DR 3MIL')], null=True, verbose_name='Tint Type')),
                ('remarks', models.CharField(blank=True, max_length=255, null=True, verbose_name='Remarks')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'NIL'), (1, 'ADD'), (2, 'Change (FOC)'), (3, 'Remain'), (4, 'Selling'), (5, 'Upgrade')], null=True, verbose_name='Gift Status')),
                ('to_accessories', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Door Visor'), (2, 'Coil Mat (B)'), (3, 'Coil Mat VIP (Red)'), (4, 'Coil Mat VIP (Black)'), (5, 'Coil Mat VIP (Grey)'), (6, 'Coil Mat 3D (Red)'), (7, 'Coil Mat 3D (Black)'), (8, 'Coil Mat 3D (Grey)'), (9, 'Sand Blasting')], null=True, verbose_name='To Accessories')),
                ('addon_film', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Carbon Film - BK-50 2MIL'), (2, 'Carbon Film - BK-70 2MIL'), (3, 'Carbon Film - BK-80 2MIL'), (4, 'Carbon Film - BK-90 2MIL')], null=True, verbose_name='Add-On Film')),
            ],
            options={
                'verbose_name': 'Item',
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated at')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Required, PrimaryKey none-editable', primary_key=True, serialize=False, verbose_name='UUID Identifier')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this data is active or deleted', verbose_name='Active')),
                ('installment_plan', models.BooleanField(blank=True, default=False, null=True)),
                ('cust_requirement', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'High Value'), (2, 'Quality'), (3, 'Attention To Detail'), (4, 'Demanding'), (5, 'Easy'), (6, 'Special Request')], default=5, null=True, verbose_name='Customer Requirement')),
                ('duration', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Duration')),
                ('assigned_team', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Team A'), (2, 'Team B'), (3, 'Team C'), (4, 'Coating Team')], null=True, verbose_name='Team')),
                ('tint_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Tint Price')),
                ('surcharge_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'NIL'), (1, '4X4'), (2, 'Luxury/Super'), (3, 'MPV'), (4, 'SUV')], null=True, verbose_name='Surcharge')),
                ('surcharge_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Surcharge Price')),
                ('upgrade_or_alacarte', models.BooleanField(blank=True, default=False, null=True, verbose_name='Upgrade/ Add Ala-Carte')),
                ('remove_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Remove')),
                ('sun_visor_charge', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Sun Visor')),
                ('discount_bool', models.BooleanField(blank=True, default=False, null=True, verbose_name='Discount')),
                ('discount_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Discount 5%'), (2, '2nd Car Discount 10%'), (3, 'Referral Voucher 15%'), (4, 'Others')], null=True, verbose_name='Discount Type')),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Discount Amount')),
                ('cust_reference_bool', models.BooleanField(blank=True, default=False, null=True, verbose_name='Customer Reference Fee')),
                ('reference_fee', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Reference Fee')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Total')),
                ('balance_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Balance')),
                ('signature_data', models.BinaryField(blank=True, help_text='Signature', null=True, verbose_name='Signature')),
                ('number', models.CharField(blank=True, default='', max_length=25, verbose_name='Number')),
            ],
            options={
                'verbose_name': 'Sales Order',
            },
        ),
    ]
